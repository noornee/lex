name: Building for all OSs

on:
  push:

jobs:
  updateversion:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Bump Version
      run: |
        version=$(cat "VERSION.txt")
        files=("VERSION.txt" "src/logic/version/internalversion.txt")

        for i in "${files[@]}"
        do
          echo -n "$(($version + 1))" > "$i"
        done

        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"

        git add .
        git commit -m "Version bump to $(($version + 1))" -m "For any changes, check the previous (${{github.event.after}}) commit."
        git push

  linuxbuild:
    runs-on: ubuntu-latest
    needs: updateversion
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.20
        check-latest: true
        
    - name: Main Linux Build
      run: |
        echo "Updating Go Dependencies"
        go get -u
        
        echo "Building for 64bit Linux"
        go build -ldflags="-s -w" -v -o lex-amd64-linux main.go
        
        echo "Building for 32bit Linux"
        GOARCH=386 go build -ldflags="-s -w" -v -o lex-i386-linux main.go
        
        echo "Installing Sass"
        npm install -g sass
        
        echo "Converting SCSS to CSS"
        sass --style=compressed --no-source-map css/main.scss css/main.min.css
        rm css/main.scss
        
        echo "Zipping Files"
        7z a lex-linux.zip lex-i386-linux lex-amd64-linux views/* js/* css/* ./logic/version/internalversion.txt
        
        echo "Ok."
      working-directory: src/
                                  
    - name: Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        tag_name: 'snapshot'
        files: |
          src/lex-linux.zip
          
  macbuild:
    runs-on: macos-latest
    needs: updateversion
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.20
        check-latest: true
    
    - name: Main MacOS Build
      run: |
        echo "Updating Go Dependencies"
        go get -u
        
        echo "Building for Intel OSX"
        go build -ldflags="-s -w" -v -o lex-amd64-osx main.go
        
        echo "Building for M1 OSX"
        GOARCH=arm64 go build -ldflags="-s -w" -v -o lex-arm64-osx main.go
        
        echo "Installing Sass"
        npm install -g sass
        
        echo "Converting SCSS to CSS"
        sass --style=compressed --no-source-map css/main.scss css/main.min.css
        rm css/main.scss
        
        echo "Zipping Files"
        7z a lex-osx.zip lex-amd64-osx lex-arm64-osx views/* js/* css/* ./logic/version/internalversion.txt
        
        echo "Ok."
      working-directory: src/
                          
    - name: Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        tag_name: 'snapshot'
        files: |
          src/lex-osx.zip
          
  winbuild:
    runs-on: windows-latest
    needs: updateversion
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.20
        check-latest: true

    - name: Main Windows Build
      run: |
        echo "Updating Go Dependencies"
        go get -u
        
        echo "Adding Time to Github Env"
        echo "RNAME=$(Get-Date -UFormat 'snapshot %Y-%m-%d %H:%M')" >> $env:GITHUB_ENV
        echo "RTXT=$(Get-Date -UFormat '### This release was automatically generated on %A %Y/%m/%d at %H:%M')" >> $env:GITHUB_ENV
        
        echo "Building for Windows x64"
        go build -ldflags="-s -w" -v -o lex-amd64-windows.exe main.go
        
        echo "Building for Windows x32"
        $Env:GOARCH = '386'
        go build -ldflags="-s -w" -v -o lex-i386-windows.exe main.go
        
        echo "Installing Sass"
        npm install -g sass
        
        echo "Converting SCSS to CSS"
        sass --style=compressed --no-source-map css/main.scss css/main.min.css
        del css/main.scss
        
        echo "Zipping Files"
        7z a lex-windows.zip lex-i386-windows.exe lex-amd64-windows.exe views/* js/* css/* ./logic/version/internalversion.txt
        
        echo "Ok."
      working-directory: src/
                                
    - name: Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        name: ${{ env.RNAME }}
        body: ${{ env.RTXT }}
        tag_name: 'snapshot'
        files: |
          src/lex-windows.zip
